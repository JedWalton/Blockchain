type: code
files:
- name: src/Main.java
  visible: true
  text: |-
    import java.util.Scanner;
    import java.util.stream.*;

    class ParallelFilteringStream {

        public static LongStream createPrimesFilteringStream(long start, long end) {
            // write your code here
            return LongStream.of();
        }

        /* Please do not modify the code below */
        public static void main(String[] args) {
            final Scanner scanner = new Scanner(System.in);
            final String[] vals = scanner.nextLine().split(" ");

            final long left = Long.valueOf(vals[0]);
            final long right = Long.valueOf(vals[1]);

            final LongStream stream = createPrimesFilteringStream(left, right);

            if (!stream.isParallel()) {
                throw new NoParallelStreamException(
                    "You need to write a parallel stream, not sequential!");
            }

            final Long count = stream.boxed().count();

            System.out.println(count);
        }

        public static class NumberUtils {

            public static boolean isPrime(long n) {
                return n > 1 && LongStream
                        .rangeClosed(2, n - 1)
                        .noneMatch(divisor -> n % divisor == 0);
            }
        }

        static class NoParallelStreamException extends RuntimeException {

            public NoParallelStreamException(String text) {
                super(text);
            }
        }
    }
  learner_created: false
feedback_link: https://hyperskill.org/learn/step/8423#comment
status: Solved
feedback:
  message: <html>Correct solution</html>
  time: Fri, 25 Feb 2022 01:06:30 UTC
record: -1
